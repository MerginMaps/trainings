---
project:
  type: website
  output-dir: _site
  preview:
    port: 4200
    watch-inputs: true

title: "Mergin Maps Admin Essentials"
subtitle: "Free and Open Source GIS Training Courses"
author: "Hans van der Kwast, Radek Pasiok, Ryan Aherin"
institute: "Mergin Maps"

format:
  revealjs:
    incremental: false
    slide-level: 0
    logo: img/lutra_logo.png
    footer: "Mergin Maps Admin Essentials"
    smaller: true
    scrollable: true

---

## Point Cloud Data 

:::: {.columns}
::: {.column width="60%"}
* Increasingly popular data type
  - Lidar
  - Photogrammetry

* Each point has 3D position (X,Y,Z) and extra attributes
  - Intensity of reflection
  - Classification
  - Return number
  - and others

* Popular formats: LAS and LAZ (compressed)
:::

::: {.column width="20%"}
![](img/air_lidar_plane.png)
:::
::::

::: {.notes}
:::



---

## FOSS tools for point clouds

* Visualization on the web: **Potree**

  <https://github.com/potree/potree/>


* Visualization on desktop: **CloudCompare**

  <http://cloudcompare.org/>


---

## Point Clouds in QGIS - how it started

:::: {.columns}
::: {.column width="100%"}
* Need for integrated display/analysis of point cloud data with other GIS data

* 3 Crowdfunding campaigns in collaboration with Hobu and North Road in 2020, 2021, 2022

* Introduced in QGIS 3.18 in 2020
  * Load LAS/LAZ
  * Visualisation in 2D/3D

:::
::::


:::: {.columns}
::: {.column width="30%"}
![](img/Lutra_logo.png)
:::

::: {.column width="30%"}
![](img/north_road_logo.png)
:::

::: {.column width="30%"}
![](img/hobu_logo.png)
:::
::::


---


## Point Clouds in QGIS 

:::: {.columns}
::: {.column width="40%"}
How it is different from vector data formats we know?

* massive amount of data
* not optimised for viewing/processing
:::

::: {.column width="50%"}
![](img/usgs_entwine_map.png)
:::
::::


---

## Preparation for visualization

:::: {.columns}
::: {.column width="70%"}
* Data needs to be organized / indexed before we can use it
* We use `octree` data structure
* Each node contains 10 000s of points
* Only few nodes needed for 2D/3D scene rendering at a time

* Indexed formats
    * COPC - Cloud-optimized Point Cloud - used in QGIS
    * EPT - used in QGIS
    * PotreeConverter
    * 3D Tiles (Cesium)
    * I3S (ESRI)
    *  ...

:::

::: {.column width="30%"}
![](img/octree.png)
:::
::::


---

## Cloud-Optimized Point Cloud

* http://copc.io
* Similar idea to Cloud-optimized GeoTiff but applied to point clouds
* Ordinary compressed LAZ file (backward compatible)
* File content reorganized for efficient access to data
* Accessible from remote servers
* Easy to use in client software, no need to index data first
* QGIS 3.26+


---

## PDAL - Point Data Abstraction Library

:::: {.columns}
::: {.column width="60%"}
* "GDAL for point cloud data"
* Drivers to read/write multitude of formats
* Wide range of filters for manipulation of data
* Combine readers, writers and filters into pipelines
:::

::: {.column width="30%"}
![](img/pdal_logo.png)
:::
::::

:::: {.columns}
::: {.column width="100%"}
![](img/pdal_pipeline.png){fig-align="center" width=400}
:::
::::

---
